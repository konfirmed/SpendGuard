(()=>{"use strict";class e{constructor(){this.activeTab="stats",this.container=document.getElementById("root"),this.container?this.init():console.error("SpendGuard: Root element not found")}async init(){this.showLoading();try{const[e,n]=await Promise.all([this.getSettings(),this.getStats()]);this.render(e,n),this.setupEventListeners(e)}catch(e){this.showError(e)}}showLoading(){this.container.innerHTML='\n      <div style="\n        width: 320px;\n        height: 480px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        background: #f9fafb;\n        font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, sans-serif;\n      ">\n        <div style="\n          width: 32px;\n          height: 32px;\n          border: 3px solid #e5e7eb;\n          border-top-color: #2563eb;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: 1rem;\n        "></div>\n        <p style="color: #6b7280; font-size: 0.875rem; margin: 0;">\n          Loading SpendGuard...\n        </p>\n        <style>\n          @keyframes spin {\n            to { transform: rotate(360deg); }\n          }\n        </style>\n      </div>\n    '}showError(e){this.container.innerHTML=`\n      <div style="\n        width: 320px;\n        height: 480px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        background: #fef2f2;\n        padding: 1rem;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      ">\n        <div style="\n          width: 48px;\n          height: 48px;\n          background: #fecaca;\n          border-radius: 50%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin-bottom: 1rem;\n        ">\n          <svg width="24" height="24" fill="#dc2626" viewBox="0 0 24 24">\n            <path d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" fill="none"/>\n          </svg>\n        </div>\n        <h3 style="margin: 0 0 0.5rem 0; color: #991b1b; font-weight: 600;">\n          Error Loading Data\n        </h3>\n        <p style="margin: 0 0 1rem 0; color: #7f1d1d; font-size: 0.875rem; text-align: center;">\n          ${e?.message||"Failed to load SpendGuard data"}\n        </p>\n        <button onclick="location.reload()" style="\n          background: #dc2626;\n          color: white;\n          border: none;\n          padding: 0.5rem 1rem;\n          border-radius: 6px;\n          font-size: 0.875rem;\n          cursor: pointer;\n        ">\n          Try Again\n        </button>\n      </div>\n    `}render(e,n){this.container.innerHTML=`\n      <div style="\n        width: 320px;\n        background: white;\n        box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        overflow: hidden;\n      ">\n        \x3c!-- Header --\x3e\n        <div style="\n          background: linear-gradient(135deg, #2563eb 0%, #7c3aed 100%);\n          color: white;\n          padding: 1rem;\n        ">\n          <div style="display: flex; align-items: center; gap: 0.5rem;">\n            <div style="\n              width: 32px;\n              height: 32px;\n              background: rgba(255, 255, 255, 0.2);\n              border-radius: 50%;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n            ">\n              <svg width="18" height="18" fill="currentColor" viewBox="0 0 20 20">\n                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>\n              </svg>\n            </div>\n            <div>\n              <h1 style="margin: 0; font-size: 1.125rem; font-weight: 700;">SpendGuard</h1>\n              <p style="margin: 0; font-size: 0.75rem; opacity: 0.9;">Your spending companion</p>\n            </div>\n          </div>\n        </div>\n\n        \x3c!-- Tab Navigation --\x3e\n        <div style="display: flex; border-bottom: 1px solid #e5e7eb;">\n          <button id="stats-tab" style="\n            flex: 1;\n            padding: 0.75rem 1rem;\n            border: none;\n            background: ${"stats"===this.activeTab?"#eff6ff":"white"};\n            color: ${"stats"===this.activeTab?"#2563eb":"#6b7280"};\n            font-weight: 500;\n            font-size: 0.875rem;\n            cursor: pointer;\n            border-bottom: ${"stats"===this.activeTab?"2px solid #2563eb":"none"};\n          ">\n            Dashboard\n          </button>\n          <button id="settings-tab" style="\n            flex: 1;\n            padding: 0.75rem 1rem;\n            border: none;\n            background: ${"settings"===this.activeTab?"#eff6ff":"white"};\n            color: ${"settings"===this.activeTab?"#2563eb":"#6b7280"};\n            font-weight: 500;\n            font-size: 0.875rem;\n            cursor: pointer;\n            border-bottom: ${"settings"===this.activeTab?"2px solid #2563eb":"none"};\n          ">\n            Settings\n          </button>\n        </div>\n\n        \x3c!-- Content --\x3e\n        <div style="padding: 1rem; height: 320px; overflow-y: auto;">\n          <div id="stats-content" style="display: ${"stats"===this.activeTab?"block":"none"};">\n            ${this.renderStatsTab(n)}\n          </div>\n          <div id="settings-content" style="display: ${"settings"===this.activeTab?"block":"none"};">\n            ${this.renderSettingsTab(e)}\n          </div>\n        </div>\n      </div>\n    `}renderStatsTab(e){return`\n      \x3c!-- Stats Cards --\x3e\n      <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 0.75rem; margin-bottom: 1.5rem;">\n        <div style="background: #dbeafe; padding: 0.75rem; border-radius: 8px;">\n          <div style="font-size: 1.5rem; font-weight: 700; color: #2563eb;">\n            ${e.thisWeekIntercepts}\n          </div>\n          <div style="font-size: 0.75rem; color: #6b7280;">This week</div>\n        </div>\n        <div style="background: #d1fae5; padding: 0.75rem; border-radius: 8px;">\n          <div style="font-size: 1.5rem; font-weight: 700; color: #059669;">\n            ${e.totalIntercepts}\n          </div>\n          <div style="font-size: 0.75rem; color: #6b7280;">Total saved</div>\n        </div>\n      </div>\n\n      \x3c!-- Recent Activity --\x3e\n      <div>\n        <h3 style="margin: 0 0 0.75rem 0; font-weight: 600; color: #111827; display: flex; align-items: center; gap: 0.5rem;">\n          <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">\n            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>\n          </svg>\n          Recent Activity\n        </h3>\n        \n        ${0===e.recentPurchases.length?'\n          <div style="text-align: center; padding: 2rem 0; color: #6b7280;">\n            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24" style="margin: 0 auto 0.75rem auto; opacity: 0.5;">\n              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"/>\n            </svg>\n            <p style="margin: 0; font-size: 0.875rem;">No purchase activity yet</p>\n            <p style="margin: 0.25rem 0 0 0; font-size: 0.75rem; color: #9ca3af;">\n              SpendGuard will track your checkout interactions\n            </p>\n          </div>\n        ':`\n          <div style="display: flex; flex-direction: column; gap: 0.75rem;">\n            ${e.recentPurchases.map((e=>`\n              <div style="\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n                padding: 0.75rem;\n                background: #f9fafb;\n                border-radius: 8px;\n              ">\n                <div style="flex: 1; min-width: 0;">\n                  <div style="font-size: 0.875rem; font-weight: 500; color: #111827; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">\n                    ${this.getDomainFromUrl(e.url)}\n                  </div>\n                  <div style="font-size: 0.75rem; color: #6b7280;">\n                    ${this.formatDate(e.timestamp)}\n                  </div>\n                </div>\n                <div style="margin-left: 0.75rem;">\n                  <span style="\n                    display: inline-flex;\n                    align-items: center;\n                    padding: 0.125rem 0.5rem;\n                    border-radius: 12px;\n                    font-size: 0.75rem;\n                    font-weight: 500;\n                    ${e.intercepted?e.proceeded?"background: #fef3c7; color: #d97706;":"background: #d1fae5; color: #059669;":"background: #f3f4f6; color: #6b7280;"}\n                  ">\n                    ${e.intercepted?e.proceeded?"Proceeded":"Prevented":"Direct"}\n                  </span>\n                </div>\n              </div>\n            `)).join("")}\n          </div>\n        `}\n      </div>\n    `}renderSettingsTab(e){return`\n      <div>\n        <h3 style="margin: 0 0 1rem 0; font-weight: 600; color: #111827;">Preferences</h3>\n        \n        <div style="display: flex; flex-direction: column; gap: 1rem;">\n          \x3c!-- Cooldown Duration --\x3e\n          <div>\n            <label style="display: block; margin-bottom: 0.5rem; font-weight: 500; color: #374151; font-size: 0.875rem;">\n              Cooldown Duration\n            </label>\n            <select id="cooldown-select" style="\n              width: 100%;\n              padding: 0.5rem 0.75rem;\n              border: 1px solid #d1d5db;\n              border-radius: 6px;\n              font-size: 0.875rem;\n              background: white;\n              color: #111827;\n            ">\n              <option value="15" ${15===e.cooldownSeconds?"selected":""}>15 seconds</option>\n              <option value="30" ${30===e.cooldownSeconds?"selected":""}>30 seconds</option>\n              <option value="60" ${60===e.cooldownSeconds?"selected":""}>1 minute</option>\n              <option value="120" ${120===e.cooldownSeconds?"selected":""}>2 minutes</option>\n              <option value="300" ${300===e.cooldownSeconds?"selected":""}>5 minutes</option>\n            </select>\n          </div>\n\n          \x3c!-- AI Nudges --\x3e\n          <div style="display: flex; align-items: center; justify-content: space-between;">\n            <div>\n              <label style="font-weight: 500; color: #374151; font-size: 0.875rem;">AI Nudges</label>\n              <p style="margin: 0.25rem 0 0 0; color: #6b7280; font-size: 0.75rem;">\n                Get personalized purchase insights\n              </p>\n            </div>\n            <button id="nudges-toggle" data-enabled="${e.enableNudges}" style="\n              position: relative;\n              width: 44px;\n              height: 24px;\n              background: ${e.enableNudges?"#2563eb":"#d1d5db"};\n              border: none;\n              border-radius: 12px;\n              cursor: pointer;\n              transition: background-color 0.2s;\n            ">\n              <span style="\n                position: absolute;\n                top: 2px;\n                left: ${e.enableNudges?"22px":"2px"};\n                width: 20px;\n                height: 20px;\n                background: white;\n                border-radius: 50%;\n                transition: left 0.2s;\n              "></span>\n            </button>\n          </div>\n\n          \x3c!-- Scam Detection --\x3e\n          <div style="display: flex; align-items: center; justify-content: space-between;">\n            <div>\n              <label style="font-weight: 500; color: #374151; font-size: 0.875rem;">Scam Detection</label>\n              <p style="margin: 0.25rem 0 0 0; color: #6b7280; font-size: 0.75rem;">\n                Warn about suspicious websites\n              </p>\n            </div>\n            <button id="scam-toggle" data-enabled="${e.enableScamDetection}" style="\n              position: relative;\n              width: 44px;\n              height: 24px;\n              background: ${e.enableScamDetection?"#2563eb":"#d1d5db"};\n              border: none;\n              border-radius: 12px;\n              cursor: pointer;\n              transition: background-color 0.2s;\n            ">\n              <span style="\n                position: absolute;\n                top: 2px;\n                left: ${e.enableScamDetection?"22px":"2px"};\n                width: 20px;\n                height: 20px;\n                background: white;\n                border-radius: 50%;\n                transition: left 0.2s;\n              "></span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      \x3c!-- About --\x3e\n      <div style="\n        margin-top: 2rem;\n        padding-top: 1rem;\n        border-top: 1px solid #e5e7eb;\n        text-align: center;\n      ">\n        <div style="color: #9ca3af; font-size: 0.75rem; line-height: 1.4;">\n          <p style="margin: 0;">SpendGuard v1.0.0</p>\n          <p style="margin: 0.25rem 0 0 0;">Built to help you make smarter purchase decisions</p>\n        </div>\n      </div>\n    `}setupEventListeners(e){let n={...e};const t=document.getElementById("stats-tab"),o=document.getElementById("settings-tab"),i=document.getElementById("stats-content"),r=document.getElementById("settings-content");t.addEventListener("click",(()=>{this.activeTab="stats",this.updateTabStyles(t,o),i.style.display="block",r.style.display="none"})),o.addEventListener("click",(()=>{this.activeTab="settings",this.updateTabStyles(o,t),i.style.display="none",r.style.display="block"}));const s=document.getElementById("cooldown-select"),d=document.getElementById("nudges-toggle"),a=document.getElementById("scam-toggle");s?.addEventListener("change",(()=>{n.cooldownSeconds=parseInt(s.value),this.saveSettings(n)})),d?.addEventListener("click",(()=>{n.enableNudges=!n.enableNudges,this.updateToggle(d,n.enableNudges),this.saveSettings(n)})),a?.addEventListener("click",(()=>{n.enableScamDetection=!n.enableScamDetection,this.updateToggle(a,n.enableScamDetection),this.saveSettings(n)}))}updateTabStyles(e,n){e.style.background="#eff6ff",e.style.color="#2563eb",e.style.borderBottom="2px solid #2563eb",n.style.background="white",n.style.color="#6b7280",n.style.borderBottom="none"}updateToggle(e,n){const t=e.querySelector("span");e.style.background=n?"#2563eb":"#d1d5db",t.style.left=n?"22px":"2px",e.setAttribute("data-enabled",n.toString())}async getSettings(){return new Promise(((e,n)=>{chrome.runtime.sendMessage({action:"getSettings"},(t=>{chrome.runtime.lastError?n(new Error(chrome.runtime.lastError.message)):e(t?.settings||{cooldownSeconds:30,enableNudges:!0,enableScamDetection:!0})}))}))}async getStats(){return new Promise(((e,n)=>{chrome.storage.local.get(["totalIntercepts","purchases"],(t=>{if(chrome.runtime.lastError)return void n(new Error(chrome.runtime.lastError.message));const o=t.totalIntercepts||0,i=t.purchases||[],r=Date.now()-6048e5,s=i.filter((e=>e.timestamp>r&&e.intercepted)).length;e({totalIntercepts:o,thisWeekIntercepts:s,recentPurchases:i.slice(0,5)})}))}))}saveSettings(e){chrome.storage.local.set({settings:e})}getDomainFromUrl(e){try{return new URL(e).hostname.replace("www.","")}catch{return e||"Unknown site"}}formatDate(e){try{const n=new Date(e),t=((new Date).getTime()-n.getTime())/36e5;return t<1?"Just now":t<24?`${Math.floor(t)}h ago`:t<48?"Yesterday":n.toLocaleDateString()}catch{return"Unknown"}}}document.addEventListener("DOMContentLoaded",(()=>{new e})),window.addEventListener("error",(e=>{console.error("SpendGuard popup error:",e.error)})),window.addEventListener("unhandledrejection",(e=>{console.error("SpendGuard popup unhandled promise rejection:",e.reason)}))})();