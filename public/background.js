(()=>{"use strict";const e="purchases",t="totalIntercepts";async function a(e){return(await chrome.storage.local.get(e))[e]}async function n(e,t){await chrome.storage.local.set({[e]:t})}chrome.runtime.onInstalled.addListener((async()=>{console.log("SpendGuard installed â€“ initializing storage"),await n(e,[]),await n(t,0),await n("settings",{cooldownSeconds:30,enableNudges:!0,enableScamDetection:!0})})),chrome.runtime.onMessage.addListener(((s,c,o)=>((async()=>{if("incrementIntercepts"===s.action){const e=(await a(t)||0)+1;await n(t,e),o({success:!0,newCount:e})}if("addPurchase"===s.action){const t=await a(e)||[];t.unshift({...s.purchase,id:Date.now().toString()}),t.length>100&&t.splice(100),await n(e,t),o({success:!0})}if("getSettings"===s.action){const e=await a("settings")||{cooldownSeconds:30,enableNudges:!0,enableScamDetection:!0};o({success:!0,settings:e})}})().catch((e=>{console.error("SpendGuard background error:",e),o({success:!1,error:e.message})})),!0)))})();